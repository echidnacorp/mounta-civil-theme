/**
 * @file
 * Positioning for responsive layout .
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

@import "base";


// We are going to create a 980px wide, 5 column grid with 20px gutters between
// columns (applied as 10px of left/right padding on each column).
$zen-column-count:  4;
$zen-gutter-width:  20px;


// IE6-7 don't support box-sizing: border-box. We can fix this in 1 of 3 ways:
// - Drop support for IE 6/7. :-) In the _base.scss, set $legacy-support-for-ie6
//   and $legacy-support-for-ie7 to false.
// - (Preferred) Install the box-sizing polyfill and set the variable below to
//   the absolute path URL to the boxsizing.htc file.
//   @see https://github.com/Schepp/box-sizing-polyfill
//   $box-sizing-polyfill-path: "/path/to/boxsizing.htc";
// - Use the same CSS unit for grid width and gutter width (use px for both or
//   use % for both, etc.) and set the box-sizing variable to content-box.
//   $zen-box-sizing: content-box;


// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-item-base: false;
// $zen-auto-include-flow-item-base: false;


/*
 * Center the page.
 */
.not-front .main-content-container {
margin-top: 2em;
}

.not-front #header hgroup {
  padding: 2.7em 0 .5em;
}

.main-content-container,
#page,
.region-bottom {
  /* For screen sizes larger than 1200px, prevent excessively long lines of text
     by setting a max-width. */
  margin-left: auto;
  margin-right: auto;
  max-width: 960px;
}

/*
 * Apply the shared properties of grid items in a single, efficient ruleset.
 */
// See the note about $zen-auto-include-item-base above.

#header,
//#content,
#navigation,
#main,
.region-sidebar-first,
.region-sidebar-second,
#footer {
  @include zen-grid-item-base();
}

/*
 * Containers for grid items and flow items.
 */

#header,
#main,
#footer {
  @include zen-grid-container();
}


/* ========================================================================== */

//Layouts

//spacing for content

.no-sidebars {
  #main {
    clear: both;
  }
}

.one-sidebar.sidebar-first {
  #main {
    #content {
      padding-left: 1em;
    }
  }
}

.one-sidebar.sidebar-second {
  #main {
    #content {
      padding-right: 1em;
    }
  }
}

.two-sidebars {
  #main #content {
    padding: 0 1em;
  }
}

//spacing for content for smaller screens

@media (max-width: 600px) {

  .two-sidebars {
    #main #content {
      padding: 0 0em;
    }
  }

  .one-sidebar.sidebar-second {
    #main {
      #content {
        padding-right: 0em;
      }
    }
  }

  .one-sidebar.sidebar-first {
    #main {
      #content {
        padding-left: 0em;
      }
    }
  }

}



/* ========================================================================== */

//Smaller Screens

@media all and (min-width: 600px) and (max-width: 959px) {


  //NONE

   .no-sidebars {
    #main {
      clear: both;
    }
   }

   //ONE SIDEBAR

   .one-sidebar.sidebar-first {

    #main { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-grid-item(3, 2);
    }

    aside.sidebar.primary { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(1, 1);
    }
  }

    .one-sidebar.sidebar-second {

    #main { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-grid-item(3, 1);
    }

    aside.sidebar.secondary{ /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(1, 4);
    }
  }


  //TWO

  .two-sidebars {

    #main { /* Span 2 columns, starting in 2nd column from left. */
      @include zen-grid-item(2, 2);
    }

    aside.sidebar.primary { /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(1, 1);
    }
    
    aside.sidebar.secondary{ /* Span 1 column, starting in 1st column from left. */
      @include zen-grid-item(1, 4);
    } 
  }
}



/* ========================================================================== */

//Main General Layout

@media all and (min-width: 960px) {

  $zen-column-count: 4;

    //FRONT

    .front.one-sidebar.sidebar-second {
    }

    .front.one-sidebar.sidebar-first {

      #navigation,
      #main { /* Span 3 columns, starting in 2nd column from left. */
        @include zen-grid-item(3, 2);
      }

      #main {
        clear: left;
      }

      .region-sidebar-first {
        @include zen-grid-item(1, 1);
      } 
    }


    //NO SIDEBARS

   .no-sidebars {
      #main { /* Span 4 columns, starting in 1 column from left. */
        @include zen-grid-item(4, 1);
        margin-right: 0;
        clear: both;
      }
    }


    //ONE SIDEBAR 

    .one-sidebar.sidebar-first {

      #main { /* Span 3 columns, starting in 2nd column from left. */
        @include zen-grid-item(3, 2);
      }
        
      aside.sidebar.primary {
        @include zen-grid-item(1, 1);
      }
    }

    .one-sidebar.sidebar-second {

      #main { /* Span 3 columns, starting in 2nd column from left. */
        @include zen-grid-item(3, 1);
      }
        
      aside.sidebar.secondary {
        @include zen-grid-item(1, 4);
      }
    }


    //TWO SIDEBARS 
    .two-sidebars {

        #main { /* Span 3 columns, starting in 2nd column from left. */
          @include zen-grid-item(2, 2);
        }
        
        aside.sidebar.primary {
          @include zen-grid-item(1, 1);
        }

        aside.sidebar.secondary {
          @include zen-grid-item(1, 4);
        }  
    }
}











